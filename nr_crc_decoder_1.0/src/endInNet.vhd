-- -------------------------------------------------------------
-- 
-- File Name: /home/apurvan/BBU/CRC_decoder_export/hdlsrc/ltehdlCRCDecoderModel/endInNet.vhd
-- Created: 2019-12-10 03:50:22
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: endInNet
-- Source Path: ltehdlCRCDecoderModel/HDL Algorithm/CRC Decoder/endInNet
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY endInNet IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        endin                             :   IN    std_logic;  -- ufix1
        out_rsvd                          :   OUT   std_logic  -- ufix1
        );
END endInNet;


ARCHITECTURE rtl OF endInNet IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL endInDelayerComp_reg             : std_logic_vector(0 TO 3);  -- ufix1 [4]
  SIGNAL endInDelayerComp_reg_next        : std_logic_vector(0 TO 3);  -- ufix1 [4]

BEGIN
  -- endIn_Delayer
  endInDelayerComp_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      endInDelayerComp_reg(0) <= '0';
      endInDelayerComp_reg(1) <= '0';
      endInDelayerComp_reg(2) <= '0';
      endInDelayerComp_reg(3) <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        endInDelayerComp_reg(0) <= endInDelayerComp_reg_next(0);
        endInDelayerComp_reg(1) <= endInDelayerComp_reg_next(1);
        endInDelayerComp_reg(2) <= endInDelayerComp_reg_next(2);
        endInDelayerComp_reg(3) <= endInDelayerComp_reg_next(3);
      END IF;
    END IF;
  END PROCESS endInDelayerComp_process;

  endInDelayerComp_output : PROCESS (endInDelayerComp_reg, endin)
  BEGIN
    out_rsvd <= hdlcoder_to_stdlogic(((((endInDelayerComp_reg(1) /= '0') OR (endInDelayerComp_reg(2) /= '0')) OR (endInDelayerComp_reg(3) /= '0')) OR (endin /= '0')) OR (endin /= '0'));
    endInDelayerComp_reg_next(0) <= endInDelayerComp_reg(1);
    endInDelayerComp_reg_next(1) <= endInDelayerComp_reg(2);
    endInDelayerComp_reg_next(2) <= endInDelayerComp_reg(3);
    endInDelayerComp_reg_next(3) <= endin;
  END PROCESS endInDelayerComp_output;


END rtl;

